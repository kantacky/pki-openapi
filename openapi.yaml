openapi: 3.1.0
info:
  title: PKI Certificate Management API
  description: |
    X.509証明書管理システムのためのRESTful API。
    証明書の発行、管理、検証、およびCA（認証局）の管理機能を提供します。
  version: 1.0.0
  contact:
    name: PKI Certificate Management Team
    email: pki@kantacky.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.pki.kantacky.com/v1
    description: 本番環境
  - url: https://stg.api.pki.kantacky.com/v1
    description: ステージング環境
  - url: https://dev.api.pki.kantacky.com/v1
    description: 開発環境
  - url: http://localhost:8080/v1
    description: ローカル開発環境

security:
  - ApiKeyAuth: []
  - OAuth2: [read, write, admin]

paths:
  /health:
    get:
      summary: ヘルスチェック
      description: APIサーバーの稼働状況を確認します
      tags:
        - System
      security: []
      responses:
        "200":
          description: システムが正常に動作中
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

  /certificates:
    get:
      summary: 証明書一覧取得
      description: 証明書の一覧を取得します。フィルタリング、ソート、ページネーションをサポートします。
      tags:
        - Certificates
      parameters:
        - name: page
          in: query
          description: ページ番号
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: ページサイズ
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          description: 証明書の状態でフィルタ
          schema:
            type: string
            enum: [active, revoked, expired, pending]
        - name: subject
          in: query
          description: 主体者名で部分一致検索
          schema:
            type: string
        - name: issuer
          in: query
          description: 発行者名で部分一致検索
          schema:
            type: string
        - name: validFrom
          in: query
          description: 有効開始日以降の証明書を検索
          schema:
            type: string
            format: date
        - name: validTo
          in: query
          description: 有効終了日以前の証明書を検索
          schema:
            type: string
            format: date
        - name: sort
          in: query
          description: ソート順
          schema:
            type: string
            enum: [validFrom, validTo, createdAt, subject]
            default: createdAt
        - name: order
          in: query
          description: ソート方向
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        "200":
          description: 証明書一覧
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginationResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Certificate"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: 証明書発行
      description: 新しい証明書を発行します
      tags:
        - Certificates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRequest"
      responses:
        "201":
          description: 証明書が正常に発行されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /certificates/{id}:
    get:
      summary: 証明書取得
      description: 指定されたIDの証明書を取得します
      tags:
        - Certificates
      parameters:
        - name: id
          in: path
          required: true
          description: 証明書のID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 証明書詳細
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    put:
      summary: 証明書更新
      description: 証明書を更新または再発行します
      tags:
        - Certificates
      parameters:
        - name: id
          in: path
          required: true
          description: 証明書のID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateRequest"
      responses:
        "200":
          description: 証明書が正常に更新されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    delete:
      summary: 証明書失効
      description: 証明書を失効させます
      tags:
        - Certificates
      parameters:
        - name: id
          in: path
          required: true
          description: 証明書のID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - unspecified
                    - keyCompromise
                    - cACompromise
                    - affiliationChanged
                    - superseded
                    - cessationOfOperation
                    - certificateHold
                  description: 失効理由
                revocationDate:
                  type: string
                  format: date-time
                  description: 失効日時（指定しない場合は現在時刻）
      responses:
        "200":
          description: 証明書が正常に失効されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /ca/root:
    get:
      summary: ルートCA証明書取得
      description: ルートCA証明書を取得します
      tags:
        - Certificate Authority
      responses:
        "200":
          description: ルートCA証明書
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateAuthority"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: ルートCA証明書作成
      description: 新しいルートCA証明書を作成します
      tags:
        - Certificate Authority
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - keySize
                - validityDays
              properties:
                subject:
                  type: string
                  description: CA証明書の主体者（Distinguished Name）
                  example: "CN=Example Root CA,O=Example Corp,C=JP"
                keySize:
                  type: integer
                  enum: [2048, 3072, 4096]
                  description: 鍵長（ビット）
                  default: 4096
                keyType:
                  type: string
                  enum: [RSA, EC]
                  description: 鍵アルゴリズム
                  default: RSA
                curve:
                  type: string
                  enum: [P-256, P-384, P-521]
                  description: 楕円曲線（ECの場合）
                validityDays:
                  type: integer
                  minimum: 365
                  maximum: 10950
                  description: 有効期間（日数）
                  default: 7300
                crlUrl:
                  type: string
                  format: uri
                  description: CRL配布ポイントURL
                ocspUrl:
                  type: string
                  format: uri
                  description: OCSPレスポンダーURL
      responses:
        "201":
          description: ルートCA証明書が正常に作成されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateAuthority"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /ca/intermediate:
    get:
      summary: 中間CA証明書一覧取得
      description: 中間CA証明書の一覧を取得します
      tags:
        - Certificate Authority
      parameters:
        - name: page
          in: query
          description: ページ番号
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: ページサイズ
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          description: CAの状態でフィルタ
          schema:
            type: string
            enum: [active, revoked, expired]
        - name: parentCaId
          in: query
          description: 親CAのIDでフィルタ
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 中間CA証明書一覧
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginationResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/CertificateAuthority"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: 中間CA証明書作成
      description: 新しい中間CA証明書を作成します
      tags:
        - Certificate Authority
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - parentCaId
                - keySize
                - validityDays
              properties:
                subject:
                  type: string
                  description: CA証明書の主体者（Distinguished Name）
                  example: "CN=Example Intermediate CA,O=Example Corp,C=JP"
                parentCaId:
                  type: string
                  format: uuid
                  description: 親CAのID
                keySize:
                  type: integer
                  enum: [2048, 3072, 4096]
                  description: 鍵長（ビット）
                  default: 2048
                keyType:
                  type: string
                  enum: [RSA, EC]
                  description: 鍵アルゴリズム
                  default: RSA
                curve:
                  type: string
                  enum: [P-256, P-384, P-521]
                  description: 楕円曲線（ECの場合）
                validityDays:
                  type: integer
                  minimum: 365
                  maximum: 3650
                  description: 有効期間（日数）
                  default: 1825
                crlUrl:
                  type: string
                  format: uri
                  description: CRL配布ポイントURL
                ocspUrl:
                  type: string
                  format: uri
                  description: OCSPレスポンダーURL
      responses:
        "201":
          description: 中間CA証明書が正常に作成されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateAuthority"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /ca/hierarchy:
    get:
      summary: CA階層取得
      description: CA証明書の階層構造を取得します
      tags:
        - Certificate Authority
      responses:
        "200":
          description: CA階層構造
          content:
            application/json:
              schema:
                type: object
                properties:
                  root:
                    $ref: "#/components/schemas/CertificateAuthority"
                  intermediates:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/CertificateAuthority"
                        - type: object
                          properties:
                            children:
                              type: array
                              items:
                                $ref: "#/components/schemas/CertificateAuthority"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /ca/crl:
    get:
      summary: CRL（証明書失効リスト）取得
      description: 指定されたCAのCRLを取得します
      tags:
        - Certificate Authority
      parameters:
        - name: caId
          in: query
          required: true
          description: CAのID
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          description: CRLの形式
          schema:
            type: string
            enum: [pem, der]
            default: pem
      responses:
        "200":
          description: CRL
          content:
            application/x-pem-file:
              schema:
                type: string
                description: PEM形式のCRL
            application/x-x509-crl:
              schema:
                type: string
                format: binary
                description: DER形式のCRL
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /ca/{id}:
    get:
      summary: CA証明書取得
      description: 指定されたIDのCA証明書を取得します
      tags:
        - Certificate Authority
      parameters:
        - name: id
          in: path
          required: true
          description: CAのID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: CA証明書詳細
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateAuthority"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    delete:
      summary: CA証明書失効
      description: CA証明書を失効させます
      tags:
        - Certificate Authority
      parameters:
        - name: id
          in: path
          required: true
          description: CAのID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - unspecified
                    - keyCompromise
                    - cACompromise
                    - superseded
                    - cessationOfOperation
                  description: 失効理由
                revocationDate:
                  type: string
                  format: date-time
                  description: 失効日時（指定しない場合は現在時刻）
      responses:
        "200":
          description: CA証明書が正常に失効されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateAuthority"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /certificates/{id}/validate:
    post:
      summary: 証明書検証
      description: 指定された証明書の有効性を確認します
      tags:
        - Certificate Validation
      parameters:
        - name: id
          in: path
          required: true
          description: 証明書のID
          schema:
            type: string
            format: uuid
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                checkRevocation:
                  type: boolean
                  description: 失効状態の確認を行うかどうか
                  default: true
                checkExpiry:
                  type: boolean
                  description: 有効期限の確認を行うかどうか
                  default: true
                validationTime:
                  type: string
                  format: date-time
                  description: 検証時点（指定しない場合は現在時刻）
      responses:
        "200":
          description: 証明書検証結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: 証明書が有効かどうか
                  validationResults:
                    type: object
                    properties:
                      signatureValid:
                        type: boolean
                        description: 署名が有効かどうか
                      notExpired:
                        type: boolean
                        description: 有効期限内かどうか
                      notRevoked:
                        type: boolean
                        description: 失効していないかどうか
                      trustChainValid:
                        type: boolean
                        description: 信頼チェーンが有効かどうか
                  errors:
                    type: array
                    items:
                      type: string
                    description: 検証エラーの詳細
                  warnings:
                    type: array
                    items:
                      type: string
                    description: 検証警告の詳細
                  validatedAt:
                    type: string
                    format: date-time
                    description: 検証実行日時
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /certificates/validate-chain:
    post:
      summary: 証明書チェーン検証
      description: 証明書チェーン全体の有効性を検証します
      tags:
        - Certificate Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificateChain
              properties:
                certificateChain:
                  type: array
                  items:
                    type: string
                  description: 証明書チェーン（PEM形式、リーフから順番）
                  minItems: 1
                trustedRoots:
                  type: array
                  items:
                    type: string
                  description: 信頼するルート証明書（PEM形式）
                checkRevocation:
                  type: boolean
                  description: 失効状態の確認を行うかどうか
                  default: true
                validationTime:
                  type: string
                  format: date-time
                  description: 検証時点（指定しない場合は現在時刻）
      responses:
        "200":
          description: 証明書チェーン検証結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: 証明書チェーンが有効かどうか
                  chainResults:
                    type: array
                    items:
                      type: object
                      properties:
                        level:
                          type: integer
                          description: チェーンレベル（0がリーフ証明書）
                        subject:
                          type: string
                          description: 証明書の主体者
                        valid:
                          type: boolean
                          description: この証明書が有効かどうか
                        errors:
                          type: array
                          items:
                            type: string
                          description: 検証エラー
                  errors:
                    type: array
                    items:
                      type: string
                    description: チェーン全体の検証エラー
                  validatedAt:
                    type: string
                    format: date-time
                    description: 検証実行日時
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /ocsp/{serialNumber}:
    get:
      summary: OCSP レスポンス取得
      description: 指定されたシリアル番号の証明書のOCSPレスポンスを取得します
      tags:
        - Certificate Validation
      parameters:
        - name: serialNumber
          in: path
          required: true
          description: 証明書のシリアル番号
          schema:
            type: string
        - name: issuer
          in: query
          required: true
          description: 発行者のハッシュ
          schema:
            type: string
      responses:
        "200":
          description: OCSPレスポンス
          content:
            application/ocsp-response:
              schema:
                type: string
                format: binary
                description: OCSPレスポンス（DER形式）
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /certificates/{id}/status:
    get:
      summary: 証明書失効状態確認
      description: 指定された証明書の失効状態を確認します
      tags:
        - Certificate Validation
      parameters:
        - name: id
          in: path
          required: true
          description: 証明書のID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 証明書失効状態
          content:
            application/json:
              schema:
                type: object
                properties:
                  serialNumber:
                    type: string
                    description: 証明書のシリアル番号
                  status:
                    type: string
                    enum: [good, revoked, unknown]
                    description: 証明書の状態
                  revocationTime:
                    type: string
                    format: date-time
                    description: 失効日時（失効済みの場合）
                  revocationReason:
                    type: string
                    enum:
                      - unspecified
                      - keyCompromise
                      - cACompromise
                      - affiliationChanged
                      - superseded
                      - cessationOfOperation
                      - certificateHold
                      - removeFromCRL
                    description: 失効理由
                  thisUpdate:
                    type: string
                    format: date-time
                    description: 情報の更新日時
                  nextUpdate:
                    type: string
                    format: date-time
                    description: 次回更新予定日時
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /keys:
    get:
      summary: キー一覧取得
      description: 暗号化キーの一覧を取得します
      tags:
        - Key Management
      parameters:
        - name: page
          in: query
          description: ページ番号
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: ページサイズ
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: type
          in: query
          description: キータイプでフィルタ
          schema:
            type: string
            enum: [RSA, EC]
        - name: status
          in: query
          description: キーの状態でフィルタ
          schema:
            type: string
            enum: [active, compromised, retired]
        - name: keySize
          in: query
          description: キーサイズでフィルタ
          schema:
            type: integer
      responses:
        "200":
          description: キー一覧
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginationResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Key"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: キー生成
      description: 新しい暗号化キーペアを生成します
      tags:
        - Key Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - size
              properties:
                type:
                  type: string
                  enum: [RSA, EC]
                  description: キーアルゴリズム
                size:
                  type: integer
                  description: キーサイズ（ビット）
                  example: 2048
                curve:
                  type: string
                  enum: [P-256, P-384, P-521]
                  description: 楕円曲線（ECの場合）
                usage:
                  type: array
                  items:
                    type: string
                    enum: [signing, encryption, keyAgreement]
                  description: キーの用途
                exportable:
                  type: boolean
                  description: キーがエクスポート可能かどうか
                  default: false
      responses:
        "201":
          description: キーが正常に生成されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Key"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /keys/{id}:
    get:
      summary: キー取得
      description: 指定されたIDのキーを取得します
      tags:
        - Key Management
      parameters:
        - name: id
          in: path
          required: true
          description: キーのID
          schema:
            type: string
            format: uuid
        - name: includePrivate
          in: query
          description: 秘密鍵を含むかどうか（管理者権限が必要）
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: キー詳細
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Key"
                  - type: object
                    properties:
                      privateKey:
                        type: string
                        description: 秘密鍵（PEM形式、includePrivate=trueの場合のみ）
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    put:
      summary: キー更新
      description: キーのメタデータを更新します
      tags:
        - Key Management
      parameters:
        - name: id
          in: path
          required: true
          description: キーのID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [active, compromised, retired]
                  description: キーの状態
      responses:
        "200":
          description: キーが正常に更新されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Key"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    delete:
      summary: キー削除
      description: キーを削除します（注意：この操作は元に戻せません）
      tags:
        - Key Management
      parameters:
        - name: id
          in: path
          required: true
          description: キーのID
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: キーが正常に削除されました
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /keys/{id}/backup:
    post:
      summary: キーバックアップ
      description: キーペアをバックアップします
      tags:
        - Key Management
      parameters:
        - name: id
          in: path
          required: true
          description: キーのID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - format
              properties:
                format:
                  type: string
                  enum: [pem, pkcs12]
                  description: バックアップ形式
                password:
                  type: string
                  description: バックアップファイルのパスワード（PKCS#12形式の場合）
                includeChain:
                  type: boolean
                  description: 証明書チェーンを含むかどうか
                  default: false
      responses:
        "200":
          description: キーバックアップ
          content:
            application/x-pem-file:
              schema:
                type: string
                description: PEM形式のキーバックアップ
            application/x-pkcs12:
              schema:
                type: string
                format: binary
                description: PKCS#12形式のキーバックアップ
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /keys/{id}/restore:
    post:
      summary: キーリストア
      description: バックアップからキーペアをリストアします
      tags:
        - Key Management
      parameters:
        - name: id
          in: path
          required: true
          description: キーのID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - backup
              properties:
                backup:
                  type: string
                  format: binary
                  description: バックアップファイル
                password:
                  type: string
                  description: バックアップファイルのパスワード
                format:
                  type: string
                  enum: [pem, pkcs12]
                  description: バックアップ形式
      responses:
        "200":
          description: キーが正常にリストアされました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Key"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /keys/{id}/rotate:
    post:
      summary: キーローテーション
      description: 新しいキーペアを生成し、古いキーを退役させます
      tags:
        - Key Management
      parameters:
        - name: id
          in: path
          required: true
          description: キーのID
          schema:
            type: string
            format: uuid
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                newKeySize:
                  type: integer
                  description: 新しいキーのサイズ（指定しない場合は現在と同じ）
                newCurve:
                  type: string
                  enum: [P-256, P-384, P-521]
                  description: 新しいキーの楕円曲線（ECキーの場合）
                retirementDate:
                  type: string
                  format: date-time
                  description: 古いキーの退役日時（指定しない場合は即座に退役）
      responses:
        "200":
          description: キーローテーションが正常に完了しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  newKey:
                    $ref: "#/components/schemas/Key"
                  oldKey:
                    $ref: "#/components/schemas/Key"
                  rotationDate:
                    type: string
                    format: date-time
                    description: ローテーション実行日時
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /templates:
    get:
      summary: 証明書テンプレート一覧取得
      description: 証明書テンプレートの一覧を取得します
      tags:
        - Templates
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: isActive
          in: query
          description: アクティブなテンプレートのみを取得
          schema:
            type: boolean
      responses:
        "200":
          description: テンプレート一覧
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginationResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Template"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      summary: 証明書テンプレート作成
      description: 新しい証明書テンプレートを作成します
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - keyUsage
              properties:
                name:
                  type: string
                  description: テンプレート名
                description:
                  type: string
                  description: テンプレートの説明
                keyUsage:
                  type: array
                  items:
                    type: string
                    enum:
                      - digitalSignature
                      - nonRepudiation
                      - keyEncipherment
                      - dataEncipherment
                      - keyAgreement
                      - keyCertSign
                      - cRLSign
                extendedKeyUsage:
                  type: array
                  items:
                    type: string
                    enum:
                      - serverAuth
                      - clientAuth
                      - codeSigning
                      - emailProtection
                      - timeStamping
                      - OCSPSigning
                validityDays:
                  type: integer
                  minimum: 1
                  maximum: 3650
                  default: 365
                keySize:
                  type: integer
                  enum: [2048, 3072, 4096]
                  default: 2048
      responses:
        "201":
          description: テンプレートが正常に作成されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /auth/login:
    post:
      summary: 認証
      description: APIアクセス用の認証を行います
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: ユーザー名
                password:
                  type: string
                  description: パスワード
                  format: password
      responses:
        "200":
          description: 認証成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: アクセストークン
                  tokenType:
                    type: string
                    example: "Bearer"
                  expiresIn:
                    type: integer
                    description: トークンの有効期限（秒）
                  scope:
                    type: array
                    items:
                      type: string
                    description: 許可されたスコープ
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /audit/logs:
    get:
      summary: 監査ログ取得
      description: システムの監査ログを取得します
      tags:
        - Security
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
        - name: action
          in: query
          schema:
            type: string
            enum: [create, read, update, delete, login, logout]
        - name: resource
          in: query
          schema:
            type: string
            enum: [certificate, ca, key, template, user]
      responses:
        "200":
          description: 監査ログ一覧
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginationResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            timestamp:
                              type: string
                              format: date-time
                            userId:
                              type: string
                              format: uuid
                            action:
                              type: string
                            resource:
                              type: string
                            resourceId:
                              type: string
                            ipAddress:
                              type: string
                            userAgent:
                              type: string
                            success:
                              type: boolean
                            details:
                              type: object
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /certificates/import:
    post:
      summary: 証明書インポート
      description: 証明書をシステムにインポートします
      tags:
        - Import/Export
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - format
              properties:
                file:
                  type: string
                  format: binary
                  description: インポートする証明書ファイル
                format:
                  type: string
                  enum: [pem, pkcs12]
                  description: ファイル形式
                password:
                  type: string
                  description: PKCS#12ファイルのパスワード
      responses:
        "201":
          description: 証明書が正常にインポートされました
          content:
            application/json:
              schema:
                type: object
                properties:
                  imported:
                    type: array
                    items:
                      $ref: "#/components/schemas/Certificate"
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        error:
                          type: string
                        details:
                          type: string
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /certificates/export:
    post:
      summary: 証明書エクスポート
      description: 指定された証明書をエクスポートします
      tags:
        - Import/Export
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificateIds
                - format
              properties:
                certificateIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: エクスポートする証明書のIDリスト
                format:
                  type: string
                  enum: [pem, pkcs12]
                  description: エクスポート形式
                includePrivateKeys:
                  type: boolean
                  description: 秘密鍵を含むかどうか
                  default: false
                password:
                  type: string
                  description: PKCS#12形式の場合のパスワード
      responses:
        "200":
          description: エクスポートファイル
          content:
            application/x-pem-file:
              schema:
                type: string
                description: PEM形式のエクスポートファイル
            application/x-pkcs12:
              schema:
                type: string
                format: binary
                description: PKCS#12形式のエクスポートファイル
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /reports/issuance:
    get:
      summary: 証明書発行統計
      description: 証明書の発行統計情報を取得します
      tags:
        - Reports
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: groupBy
          in: query
          schema:
            type: string
            enum: [day, week, month]
            default: day
      responses:
        "200":
          description: 証明書発行統計
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: object
                    properties:
                      start:
                        type: string
                        format: date
                      end:
                        type: string
                        format: date
                  total:
                    type: integer
                    description: 総発行数
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        issued:
                          type: integer
                        revoked:
                          type: integer
                        expired:
                          type: integer
        "400":
          $ref: "#/components/responses/ValidationError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /reports/usage:
    get:
      summary: 使用状況レポート
      description: システムの使用状況レポートを取得します
      tags:
        - Reports
      responses:
        "200":
          description: 使用状況レポート
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificates:
                    type: object
                    properties:
                      total:
                        type: integer
                      active:
                        type: integer
                      revoked:
                        type: integer
                      expired:
                        type: integer
                  cas:
                    type: object
                    properties:
                      root:
                        type: integer
                      intermediate:
                        type: integer
                  keys:
                    type: object
                    properties:
                      total:
                        type: integer
                      active:
                        type: integer
                      compromised:
                        type: integer
                      retired:
                        type: integer
                  templates:
                    type: object
                    properties:
                      total:
                        type: integer
                      active:
                        type: integer
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: APIキー認証

    OAuth2:
      type: oauth2
      description: OAuth2認証
      flows:
        clientCredentials:
          tokenUrl: https://auth.pki-cert-mgmt.example.com/oauth/token
          scopes:
            read: 読み取り権限
            write: 書き込み権限
            admin: 管理者権限

  responses:
    UnauthorizedError:
      description: 認証が必要です
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    ForbiddenError:
      description: アクセス権限がありません
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    NotFoundError:
      description: リソースが見つかりません
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    ValidationError:
      description: 入力値が無効です
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    InternalServerError:
      description: サーバー内部エラー
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: エラーコード
          example: "INVALID_REQUEST"
        message:
          type: string
          description: エラーメッセージ
          example: "リクエストの形式が無効です"
        details:
          type: array
          description: 詳細なエラー情報
          items:
            type: object
            properties:
              field:
                type: string
                description: エラーが発生したフィールド
              code:
                type: string
                description: フィールド固有のエラーコード
              message:
                type: string
                description: フィールド固有のエラーメッセージ
        timestamp:
          type: string
          format: date-time
          description: エラー発生日時
        traceId:
          type: string
          description: トレースID（デバッグ用）

    PaginationResponse:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          description: 現在のページ番号
          example: 1
        size:
          type: integer
          minimum: 1
          maximum: 100
          description: ページサイズ
          example: 20
        total:
          type: integer
          minimum: 0
          description: 総件数
          example: 150
        totalPages:
          type: integer
          minimum: 0
          description: 総ページ数
          example: 8

    Certificate:
      type: object
      required:
        - id
        - subject
        - issuer
        - serialNumber
        - validFrom
        - validTo
        - status
      properties:
        id:
          type: string
          format: uuid
          description: 証明書の一意識別子
          example: "550e8400-e29b-41d4-a716-446655440000"
        subject:
          type: string
          description: 証明書の主体者（Distinguished Name）
          example: "CN=example.com,OU=IT Department,O=Example Corp,L=Tokyo,ST=Tokyo,C=JP"
        issuer:
          type: string
          description: 証明書の発行者（Distinguished Name）
          example: "CN=Example CA,O=Example Corp,C=JP"
        serialNumber:
          type: string
          description: 証明書のシリアル番号
          example: "1234567890ABCDEF"
        validFrom:
          type: string
          format: date-time
          description: 証明書の有効開始日時
        validTo:
          type: string
          format: date-time
          description: 証明書の有効終了日時
        status:
          type: string
          enum: [active, revoked, expired, pending]
          description: 証明書の状態
        keyUsage:
          type: array
          items:
            type: string
            enum:
              - digitalSignature
              - nonRepudiation
              - keyEncipherment
              - dataEncipherment
              - keyAgreement
              - keyCertSign
              - cRLSign
          description: キー使用法
        extendedKeyUsage:
          type: array
          items:
            type: string
            enum:
              - serverAuth
              - clientAuth
              - codeSigning
              - emailProtection
              - timeStamping
              - OCSPSigning
          description: 拡張キー使用法
        fingerprint:
          type: string
          description: 証明書のフィンガープリント（SHA-256）
          example: "A1:B2:C3:D4:E5:F6:07:08:09:0A:1B:2C:3D:4E:5F:60:71:82:93:A4:B5:C6:D7:E8:F9:0A:1B:2C:3D:4E:5F:60"
        publicKey:
          type: string
          description: 公開鍵（PEM形式）
        certificate:
          type: string
          description: 証明書（PEM形式）
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
        revokedAt:
          type: string
          format: date-time
          description: 失効日時（失効済みの場合）
        revocationReason:
          type: string
          enum:
            - unspecified
            - keyCompromise
            - cACompromise
            - affiliationChanged
            - superseded
            - cessationOfOperation
            - certificateHold
            - removeFromCRL
          description: 失効理由

    CertificateRequest:
      type: object
      required:
        - subject
        - keySize
      properties:
        subject:
          type: string
          description: 証明書の主体者（Distinguished Name）
          example: "CN=example.com,OU=IT Department,O=Example Corp,L=Tokyo,ST=Tokyo,C=JP"
        subjectAltNames:
          type: array
          items:
            type: string
          description: サブジェクト代替名
          example: ["example.com", "www.example.com", "api.example.com"]
        keySize:
          type: integer
          enum: [2048, 3072, 4096]
          description: 鍵長（ビット）
          default: 2048
        keyType:
          type: string
          enum: [RSA, EC]
          description: 鍵アルゴリズム
          default: RSA
        curve:
          type: string
          enum: [P-256, P-384, P-521]
          description: 楕円曲線（ECの場合）
        validityDays:
          type: integer
          minimum: 1
          maximum: 3650
          description: 有効期間（日数）
          default: 365
        keyUsage:
          type: array
          items:
            type: string
            enum:
              - digitalSignature
              - nonRepudiation
              - keyEncipherment
              - dataEncipherment
              - keyAgreement
              - keyCertSign
              - cRLSign
          description: キー使用法
        extendedKeyUsage:
          type: array
          items:
            type: string
            enum:
              - serverAuth
              - clientAuth
              - codeSigning
              - emailProtection
              - timeStamping
              - OCSPSigning
          description: 拡張キー使用法
        templateId:
          type: string
          format: uuid
          description: 使用する証明書テンプレートID

    CertificateAuthority:
      type: object
      required:
        - id
        - subject
        - type
        - status
      properties:
        id:
          type: string
          format: uuid
          description: CAの一意識別子
        subject:
          type: string
          description: CAの主体者（Distinguished Name）
          example: "CN=Example Root CA,O=Example Corp,C=JP"
        type:
          type: string
          enum: [root, intermediate]
          description: CAのタイプ
        status:
          type: string
          enum: [active, revoked, expired]
          description: CAの状態
        parentCaId:
          type: string
          format: uuid
          description: 親CAのID（中間CAの場合）
        certificate:
          type: string
          description: CA証明書（PEM形式）
        crlUrl:
          type: string
          format: uri
          description: CRL配布ポイントURL
        ocspUrl:
          type: string
          format: uri
          description: OCSPレスポンダーURL
        validFrom:
          type: string
          format: date-time
          description: CA証明書の有効開始日時
        validTo:
          type: string
          format: date-time
          description: CA証明書の有効終了日時
        createdAt:
          type: string
          format: date-time
          description: 作成日時

    Key:
      type: object
      required:
        - id
        - type
        - size
        - status
      properties:
        id:
          type: string
          format: uuid
          description: キーの一意識別子
        type:
          type: string
          enum: [RSA, EC]
          description: キーアルゴリズム
        size:
          type: integer
          description: キーサイズ（ビット）
          example: 2048
        curve:
          type: string
          enum: [P-256, P-384, P-521]
          description: 楕円曲線（ECの場合）
        status:
          type: string
          enum: [active, compromised, retired]
          description: キーの状態
        publicKey:
          type: string
          description: 公開鍵（PEM形式）
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        lastUsed:
          type: string
          format: date-time
          description: 最終使用日時

    Template:
      type: object
      required:
        - id
        - name
        - keyUsage
      properties:
        id:
          type: string
          format: uuid
          description: テンプレートの一意識別子
        name:
          type: string
          description: テンプレート名
          example: "Web Server Certificate"
        description:
          type: string
          description: テンプレートの説明
        keyUsage:
          type: array
          items:
            type: string
            enum:
              - digitalSignature
              - nonRepudiation
              - keyEncipherment
              - dataEncipherment
              - keyAgreement
              - keyCertSign
              - cRLSign
          description: キー使用法
        extendedKeyUsage:
          type: array
          items:
            type: string
            enum:
              - serverAuth
              - clientAuth
              - codeSigning
              - emailProtection
              - timeStamping
              - OCSPSigning
          description: 拡張キー使用法
        validityDays:
          type: integer
          minimum: 1
          maximum: 3650
          description: デフォルト有効期間（日数）
          default: 365
        keySize:
          type: integer
          enum: [2048, 3072, 4096]
          description: デフォルト鍵長（ビット）
          default: 2048
        isActive:
          type: boolean
          description: テンプレートが有効かどうか
          default: true
        createdAt:
          type: string
          format: date-time
          description: 作成日時
        updatedAt:
          type: string
          format: date-time
          description: 更新日時
